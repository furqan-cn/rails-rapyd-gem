var search_data = {"index":{"searchIndex":["rapydservice","rapydservice","restclientservice","additional_fields()","create_artist_payout_to_bank()","create_payout_beneficiary()","create_payout_sender()","create_wallet_with_contact()","getcall()","identification_type_information()","identify_contact()","new()","new()","payout_beneficiary()","payout_method_type_list()","payout_sender()","postcall()","wallet_information()","wallet_transactions_listing()"],"longSearchIndex":["rapydservice","rapydservice::rapydservice","restclientservice","rapydservice::rapydservice#additional_fields()","rapydservice::rapydservice#create_artist_payout_to_bank()","rapydservice::rapydservice#create_payout_beneficiary()","rapydservice::rapydservice#create_payout_sender()","rapydservice::rapydservice#create_wallet_with_contact()","restclientservice#getcall()","rapydservice::rapydservice#identification_type_information()","rapydservice::rapydservice#identify_contact()","rapydservice::rapydservice::new()","restclientservice::new()","rapydservice::rapydservice#payout_beneficiary()","rapydservice::rapydservice#payout_method_type_list()","rapydservice::rapydservice#payout_sender()","restclientservice#postcall()","rapydservice::rapydservice#wallet_information()","rapydservice::rapydservice#wallet_transactions_listing()"],"info":[["RapydService","","RapydService.html","",""],["RapydService::RapydService","","RapydService/RapydService.html","",""],["RestClientService","","RestClientService.html","","<p>Rest Client Service Class for all api calls\n"],["additional_fields","RapydService::RapydService","RapydService/RapydService.html#method-i-additional_fields","(payout_method_type, beneficiary_country, beneficiary_entity_type, amount, payout_currency, sender_country, sender_currency, sender_entity_type)","<p>You can additional fields while selecting the payout method type such as\npayout_method_type, beneficiary_country …\n"],["create_artist_payout_to_bank","RapydService::RapydService","RapydService/RapydService.html#method-i-create_artist_payout_to_bank","(body)","<p>You can create a payout by giving body params i.e {\n\n<pre>&quot;beneficiary&quot;: {\n    &quot;name&quot;: &quot;Jane Doe&quot;,\n    &quot;address&quot;: ...</pre>\n"],["create_payout_beneficiary","RapydService::RapydService","RapydService/RapydService.html#method-i-create_payout_beneficiary","(body)","<p>You can create a payout by giving the required body params i.e\n\n<pre>{\n   &quot;category&quot;: &quot;bank&quot;,\n   &quot;default_payout_method_type&quot;: ...</pre>\n"],["create_payout_sender","RapydService::RapydService","RapydService/RapydService.html#method-i-create_payout_sender","(body)","<p>You can create a payout sender by giving the required body params i.e  {\n\n<pre>&quot;currency&quot;: &quot;PHP&quot;,\n&quot;country&quot;: ...</pre>\n"],["create_wallet_with_contact","RapydService::RapydService","RapydService/RapydService.html#method-i-create_wallet_with_contact","(body)","<p>Search For existing wallet with wallet_id i.e.  {\n\n<pre>&quot;first_name&quot;: &quot;John&quot;,\n&quot;last_name&quot;: &quot;Doe&quot;,\n&quot;ewallet_reference_id&quot;: ...</pre>\n"],["getCall","RestClientService","RestClientService.html#method-i-getCall","(uri, headers)","<p>getCall used to send GET call\n<p>@param [Object]  uri @param [Object]  headers @return [Object]\n"],["identification_type_information","RapydService::RapydService","RapydService/RapydService.html#method-i-identification_type_information","(country)","<p>Get the identification documents information with country e.g US\n"],["identify_contact","RapydService::RapydService","RapydService/RapydService.html#method-i-identify_contact","(country, ewallet, contact)","<p>Verifying the identity of a personal contact for a Rapyd Wallet by giving\ncountry ewalllet_id and contact_id …\n"],["new","RapydService::RapydService","RapydService/RapydService.html#method-c-new","(rapid_api_endpoint, rapid_access_key, rapyd_secret_key)","<p>Initilize the Service by giving Sandbox or Production credientials i.e:\n\n<pre>rapid_api_endpoint: &quot;https://sandboxapi.rapyd.net&quot; ...</pre>\n"],["new","RestClientService","RestClientService.html#method-c-new","(end_point)","<p>@param [Object]  end_point @return [Object]\n"],["payout_beneficiary","RapydService::RapydService","RapydService/RapydService.html#method-i-payout_beneficiary","(beneficiary)","<p>Use the GET method to retrieve details of a payout beneficiary by giving\nbeneficiary i.e beneficiary_2c0aca540aca5d2f7700270b201b2157 …\n"],["payout_method_type_list","RapydService::RapydService","RapydService/RapydService.html#method-i-payout_method_type_list","(beneficiary_country, payout_currency, category, sender_entity)","<p>List of all available payout method types for bank transfers by giving\nbeneficiary_country, payout_currency …\n"],["payout_sender","RapydService::RapydService","RapydService/RapydService.html#method-i-payout_sender","(sender)","<p>You can create a payout sender by giving the sender id  i.e\nsender_efa35c7f32b39aa30f6bccfba640fcd0\n"],["postCall","RestClientService","RestClientService.html#method-i-postCall","(uri, body, headers)","<p>postCall used to send POST call\n<p>@param [Object]  uri @param [Object]  body @param [Object]  headers @return\n…\n"],["wallet_information","RapydService::RapydService","RapydService/RapydService.html#method-i-wallet_information","(wallet_id)","<p>Search For existing wallet with wallet_id i.e.\newallet_db405029bac88de81f3072f31fcf0442\n"],["wallet_transactions_listing","RapydService::RapydService","RapydService/RapydService.html#method-i-wallet_transactions_listing","(wallet_id, type)","<p>List of all transactions for existing wallet_id and by type i.e.\newallet_db405029bac88de81f3072f31fcf0442 …\n"]]}}